#!/usr/bin/env bash

# 🚀 Debian 12 Server Optimization Script
# 🎯 Objetivo: Hacer tu servidor ligero, rápido y fácil de administrar.
# 📝 Funcionalidades:
#    📦 Backup de configuraciones
#    🛑 Deshabilitar servicios innecesarios
#    🔄 Auto-upgrades
#    🏎️ CPU Governor en "performance"
#    ⚙️ Ajustes sysctl personalizados
#    ⏰ Sincronización horaria con Chrony
#    🔄 Rollback de cambios

set -euo pipefail
IFS=$'\n\t'

# ────────────────────────────────────────────────────────────
# Variables y Colores
# ────────────────────────────────────────────────────────────
SCRIPT_NAME="$(basename "$0")"
LOG_FILE="/var/log/optimize-debian.log"
BACKUP_ROOT_DEFAULT="/root/optimize-backup-$(date +%Y%m%d-%H%M%S)"

# Colores para mensajes
RED='\033[0;31m'    GREEN='\033[0;32m'
YELLOW='\033[1;33m' BLUE='\033[0;34m'
NC='\033[0m'        # No Color

# ────────────────────────────────────────────────────────────
# Funciones de registro
# ────────────────────────────────────────────────────────────
log()  { echo -e "${GREEN}[INFO]  [$(date +'%F %T')]${NC} $*"  | tee -a "$LOG_FILE"; }
warn() { echo -e "${YELLOW}[WARN]${NC} $*" | tee -a "$LOG_FILE"; }
err()  { echo -e "${RED}[ERROR]${NC} $*" | tee -a "$LOG_FILE"; }

# ────────────────────────────────────────────────────────────
# Verificaciones iniciales
# ────────────────────────────────────────────────────────────
ensure_root() {
  if [[ $EUID -ne 0 ]]; then
    err "Ejecuta como root o con sudo."
    exit 1
  fi
}

check_cmd() {
  command -v "$1" >/dev/null 2>&1 || { err "Falta comando '$1'. Instálalo primero."; exit 1; }
}

# ────────────────────────────────────────────────────────────
# 📦 Backup de configuraciones críticas
# ────────────────────────────────────────────────────────────
backup_configs() {
  BACKUP_ROOT="${1:-$BACKUP_ROOT_DEFAULT}"
  log "Creando backup en $BACKUP_ROOT"
  mkdir -p "$BACKUP_ROOT"/{sysctl,cpufreq,chrony,apt,services}
  systemctl list-unit-files --type=service --state=enabled \
    > "$BACKUP_ROOT/services/enabled-services.txt"
  cp /etc/sysctl.d/99-custom.conf    "$BACKUP_ROOT/sysctl/"    2>/dev/null || warn "sysctl no existe"
  cp /etc/default/cpufrequtils       "$BACKUP_ROOT/cpufreq/"   2>/dev/null || warn "cpufrequtils no existe"
  cp /etc/chrony/chrony.conf         "$BACKUP_ROOT/chrony/"    2>/dev/null || warn "chrony.conf no existe"
  cp /etc/apt/apt.conf.d/50unattended-upgrades \
                                      "$BACKUP_ROOT/apt/"       2>/dev/null || warn "unattended-upgrades conf no existe"
  log "Backup completado"
}

# ────────────────────────────────────────────────────────────
# 🔄 Rollback de última configuración
# ────────────────────────────────────────────────────────────
rollback() {
  local BACKUP_DIR
  BACKUP_DIR=$(ls -td /root/optimize-backup-* 2>/dev/null | head -n1)
  if [[ -z "$BACKUP_DIR" || ! -d "$BACKUP_DIR" ]]; then
    err "No se encontró backup."
    exit 1
  fi
  log "Restaurando desde $BACKUP_DIR"
  while read -r svc; do
    systemctl enable --now "$svc" 2>/dev/null || warn "No pudo habilitar $svc"
  done < "$BACKUP_DIR/services/enabled-services.txt"
  cp "$BACKUP_DIR/sysctl/99-custom.conf"      /etc/sysctl.d/       2>/dev/null || warn
  cp "$BACKUP_DIR/cpufreq/cpufrequtils"       /etc/default/        2>/dev/null || warn
  cp "$BACKUP_DIR/chrony/chrony.conf"         /etc/chrony/         2>/dev/null || warn
  cp "$BACKUP_DIR/apt/50unattended-upgrades"  /etc/apt/apt.conf.d/ 2>/dev/null || warn
  systemctl daemon-reload
  sysctl --system || warn
  systemctl restart cpufrequtils chrony || warn
  log "Rollback completado"
}

# ────────────────────────────────────────────────────────────
# 🛑 Deshabilitar servicios innecesarios (Interactivo)
# ────────────────────────────────────────────────────────────
disable_services_interactive() {
  # 1) Recoge servicios .service habilitados
  local svcs svc
  mapfile -t svcs < <(
    systemctl list-unit-files --type=service --state=enabled \
      --no-legend --no-pager \
      | awk '{print $1}' | sort
  )

  if [[ ${#svcs[@]} -eq 0 ]]; then
    log "No hay servicios .service habilitados para mostrar."
    return
  fi

  # 2) Muestra menú de selección
  echo -e "${BLUE}Selecciona servicios a deshabilitar (enter para terminar):${NC}"
  select svc in "[Terminar]" "${svcs[@]}"; do
    if [[ "$svc" == "[Terminar]" ]]; then
      log "Selección finalizada."
      break
    fi
    if [[ -z "$svc" ]]; then
      warn "Opción inválida, intenta de nuevo."
      continue
    fi
    # 3) Confirmación
    read -rp "¿Deshabilitar $svc? (y/N): " ans
    if [[ "$ans" =~ ^[Yy]$ ]]; then
      systemctl disable --now "$svc"
      log "$svc deshabilitado"
    else
      log "$svc conservado"
    fi
  done
}

# ────────────────────────────────────────────────────────────
# 🔄 Configurar unattended-upgrades
# ────────────────────────────────────────────────────────────
config_unattended() {
  log "Instalando unattended-upgrades"
  apt update
  DEBIAN_FRONTEND=noninteractive apt install -y unattended-upgrades apt-listchanges
  cat >/etc/apt/apt.conf.d/20auto-upgrades <<EOF
APT::Periodic::Update-Package-Lists "1";
APT::Periodic::Unattended-Upgrade "1";
EOF
  dpkg-reconfigure --frontend=noninteractive unattended-upgrades
  log "Auto-upgrades configurado"
}

# ────────────────────────────────────────────────────────────
# 🏎️ Configurar CPU Governor
# ────────────────────────────────────────────────────────────
config_cpu_governor() {
  log "Configurando CPU governor a performance"
  apt install -y cpufrequtils
  cat >/etc/default/cpufrequtils <<EOF
GOVERNOR="performance"
EOF
  systemctl enable cpufrequtils
  systemctl restart cpufrequtils
  log "CPU governor listo"
}

# ────────────────────────────────────────────────────────────
# ⚙️ Ajustes sysctl personalizados
# ────────────────────────────────────────────────────────────
config_sysctl() {
  log "Aplicando ajustes sysctl"
  cat >/etc/sysctl.d/99-custom.conf <<EOF
vm.swappiness=10
vm.vfs_cache_pressure=50
net.core.netdev_max_backlog=2000
net.core.somaxconn=1024
fs.file-max=100000
EOF
  sysctl --system
  log "Sysctl aplicado"
}

# ────────────────────────────────────────────────────────────
# ⏰ Configurar Chrony (sin systemd-timesyncd)
# ────────────────────────────────────────────────────────────
config_chrony() {
  log "Instalando y configurando Chrony"
  apt install -y chrony
  systemctl disable --now systemd-timesyncd.service || true
  systemctl enable --now chrony
  log "Chrony activo"
}

# ────────────────────────────────────────────────────────────
# 📊 Menú principal interactivo
# ────────────────────────────────────────────────────────────
show_menu() {
  cat <<EOF

${BLUE}=== Menú de Optimización Debian 12 ===${NC}
1) 📦 Backup de configuraciones
2) 🛑 Deshabilitar servicios interactivos
3) 🔄 Configurar auto-upgrades
4) 🏎️ Configurar CPU governor
5) ⚙️ Aplicar ajustes sysctl
6) ⏰ Configurar Chrony
7) 🚀 Ejecutar todo (1-6)
8) 🔄 Rollback al último backup
9) ❌ Salir
EOF
}

# ────────────────────────────────────────────────────────────
# Main
# ────────────────────────────────────────────────────────────
main() {
  ensure_root
  check_cmd systemctl
  check_cmd apt
  check_cmd sysctl

  while true; do
    show_menu
    read -rp "Elige una opción [1-9]: " opt
    case "$opt" in
      1) backup_configs ;;
      2) disable_services_interactive ;;
      3) config_unattended ;;
      4) config_cpu_governor ;;
      5) config_sysctl ;;
      6) config_chrony ;;
      7) backup_configs && disable_services_interactive && config_unattended && \
                         config_cpu_governor && config_sysctl && config_chrony ;;
      8) rollback ;;
      9) log "Saliendo…"; exit 0 ;;
      *) warn "Opción inválida." ;;
    esac
  done
}

main "$@"
